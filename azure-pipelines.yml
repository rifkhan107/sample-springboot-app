# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    goals: 'package'

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       # Copy the deployable package to the nginx server
#         scp target/*.jar azureuserr@104.208.69.86:/var/www/html
      
#       # # Install any necessary dependencies on the nginx server
#       # ssh user@server "apt-get install -y openjdk-11-jdk"
      
#       # # Restart the nginx server
#       # ssh user@server "systemctl restart nginx"

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'dev-tv-web-admin'
    sourceFolder: '$(Agent.BuildDirectory)'
    contents: '**/*.jar'
    targetFolder: '/var/www/html'
    readyTimeout: '20000'
    flattenFolders: true

- task: Bash@3
  inputs:
          targetType: 'inline'
          script: |
            cat > /etc/nginx/conf.d/java-app.conf <<EOF
            server {
                listen 80;
                server_name example.com;
                
                location / {
                    proxy_pass http://localhost:8080;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }
            EOF
      
      # Restart the nginx service to pick up the new application
- task: Bash@3
  inputs:
          targetType: 'inline'
          script: |
            systemctl restart nginx

# - task: SSH@0
#   inputs:
#     sshEndpoint: 'dev-tv-web-admin'
#     runOptions: 'inline'
#     inline: 'systemctl restart nginx'
#     readyTimeout: '20000'